/*
 * Rafik H.
 * June 15 2020
 * For a blackjack game creation
 */
//NOTE: As this is a culmnating assignment with a smaller time frame than usual the code used may not be the most efficient
//Some aspects of code werent represented as well as i'd like them to so for some aspects that may be missing 
//https://github.com/rafix7742/3.2-Algorithm-desgin is a link to a project that showed more ablity in my coding skills
/**
 *
 * List of ideas that could not be implemented due to time restraint:
 * - Suits attached to cards
 * - read and written bet values and if they won or loss (loss would be negative in the file)
 * - A MUCH more efficient way of getting card names/values
 * - Less buggy tie condition (There's a very specific situation that causes the user to lose in the event of a tie)
 * - Splits, doubling down and dealer ace insurance situations
 * 
 */
// Of course a lot of implementaions seem easier on paper but will not work in practice so maybe not all of these but at least two i could have done with an extra day or two
import java.util.Random;
//import java.util.ArrayList;
import java.util.Scanner;
import java.io.*;


public class BlackjackGUI extends javax.swing.JFrame {
public int money = 1000;
public int bet = 100;
int[] PlyrCard;
int[]DealerCard;
public int[] PlyrCardVal;
String[]CardNames;
int PlyrCardTotal;
int DealerCardTotal;
int CardTotal;
boolean AceCheck=false;
boolean DealerDone =false;
boolean PlayerDone=false;
boolean Win;
boolean Tie;
    /**
     * Creates new form BlackjackGUI
     */
    public BlackjackGUI() {
        initComponents();
        this.PlyrCard = new int[5];
        this.DealerCard = new int [5];
        this.PlyrCardVal= new int[13];
        this.CardNames = new String[13];
        CardNames[0] = "Ace";
        CardNames[1] = "Two";
        CardNames[2] = "Three";
        CardNames[3] = "Four";
        CardNames[4] = "Five";
        CardNames[5] = "Six";
        CardNames[6] = "Seven";
        CardNames[7] = "Eight";
        CardNames[8] = "Nine";
        CardNames[9] = "Ten";
        CardNames[10] = "Jack";
        CardNames[11] = "Queen";
        CardNames[12] = "King";
        
       RndStartBtn.setVisible(false);
       ConfrimBetBtn.setEnabled(false);
       PlusBetBtn.setEnabled(false);
       MinusBetBtn.setEnabled(false);
       RndEndBtn.setVisible(false);
       HitBtn.setEnabled(false);
       StayBtn.setEnabled(false);
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //Long if statemnts, look into arraylists and for loops attached to them
    //Make copy of game for later
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackG1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        StartBtn = new javax.swing.JButton();
        DCard1 = new javax.swing.JLabel();
        DCard2 = new javax.swing.JLabel();
        DCard3 = new javax.swing.JLabel();
        DCard4 = new javax.swing.JLabel();
        DCard5 = new javax.swing.JLabel();
        PCard1 = new javax.swing.JLabel();
        PCard2 = new javax.swing.JLabel();
        PCard3 = new javax.swing.JLabel();
        PCard4 = new javax.swing.JLabel();
        PCard5 = new javax.swing.JLabel();
        StayBtn = new javax.swing.JButton();
        HitBtn = new javax.swing.JButton();
        RndEndBtn = new javax.swing.JButton();
        RndStartBtn = new javax.swing.JButton();
        MoneyTlbl = new javax.swing.JLabel();
        PlusBetBtn = new javax.swing.JButton();
        MinusBetBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        BetNumlbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ConfrimBetBtn = new javax.swing.JButton();
        Warninglbl = new javax.swing.JLabel();
        Instlbl = new javax.swing.JLabel();
        Scr2Btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        DCardTlbl = new javax.swing.JLabel();
        PCardTlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackG1.setBackground(new java.awt.Color(0, 153, 0));

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 204));
        jLabel1.setText("Welcome to the Blackjack gambling game!");

        StartBtn.setBackground(new java.awt.Color(102, 255, 51));
        StartBtn.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        StartBtn.setText("Start Playing");
        StartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartBtnActionPerformed(evt);
            }
        });

        DCard1.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        DCard1.setText("-----");

        DCard2.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        DCard2.setText("-----");

        DCard3.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        DCard3.setText("-----");

        DCard4.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        DCard4.setText("-----");

        DCard5.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        DCard5.setText("-----");

        PCard1.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        PCard1.setText("-----");

        PCard2.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        PCard2.setText("-----");

        PCard3.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        PCard3.setText("-----");

        PCard4.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        PCard4.setText("-----");

        PCard5.setFont(new java.awt.Font("Yu Gothic", 3, 12)); // NOI18N
        PCard5.setText("-----");

        StayBtn.setBackground(new java.awt.Color(0, 0, 0));
        StayBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        StayBtn.setForeground(new java.awt.Color(255, 255, 255));
        StayBtn.setText("Stay");
        StayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StayBtnActionPerformed(evt);
            }
        });

        HitBtn.setBackground(new java.awt.Color(0, 0, 0));
        HitBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        HitBtn.setForeground(new java.awt.Color(255, 255, 255));
        HitBtn.setText("Hit");
        HitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitBtnActionPerformed(evt);
            }
        });

        RndEndBtn.setBackground(new java.awt.Color(255, 255, 0));
        RndEndBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        RndEndBtn.setText("Results");
        RndEndBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RndEndBtnActionPerformed(evt);
            }
        });

        RndStartBtn.setBackground(new java.awt.Color(51, 255, 0));
        RndStartBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        RndStartBtn.setText("Start Round");
        RndStartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RndStartBtnActionPerformed(evt);
            }
        });

        MoneyTlbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        MoneyTlbl.setText("Money: 1000$");

        PlusBetBtn.setBackground(new java.awt.Color(51, 255, 0));
        PlusBetBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        PlusBetBtn.setText("Increase Bet");
        PlusBetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlusBetBtnActionPerformed(evt);
            }
        });

        MinusBetBtn.setBackground(new java.awt.Color(204, 0, 0));
        MinusBetBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        MinusBetBtn.setText("Decrease Bet");
        MinusBetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusBetBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Bet:");

        BetNumlbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        BetNumlbl.setText("100");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Min(100)");

        ConfrimBetBtn.setBackground(new java.awt.Color(51, 255, 0));
        ConfrimBetBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        ConfrimBetBtn.setText("Confirm Bet");
        ConfrimBetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfrimBetBtnActionPerformed(evt);
            }
        });

        Warninglbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        Instlbl.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N

        Scr2Btn.setBackground(new java.awt.Color(204, 51, 0));
        Scr2Btn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        Scr2Btn.setText("Rules");
        Scr2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Scr2BtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Dealer Cards");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Player Cards");

        DCardTlbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        DCardTlbl.setText("Dealer Card Total:");

        PCardTlbl.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        PCardTlbl.setText("Player Card Total:");

        javax.swing.GroupLayout BackG1Layout = new javax.swing.GroupLayout(BackG1);
        BackG1.setLayout(BackG1Layout);
        BackG1Layout.setHorizontalGroup(
            BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackG1Layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackG1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Scr2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addComponent(DCardTlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(PCardTlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(BackG1Layout.createSequentialGroup()
                                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addComponent(PCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(PCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(PCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(45, 45, 45)
                                .addComponent(PCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(PCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BackG1Layout.createSequentialGroup()
                                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addComponent(DCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(DCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(DCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(45, 45, 45)
                                .addComponent(DCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(DCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackG1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackG1Layout.createSequentialGroup()
                                        .addComponent(Warninglbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(159, 159, 159))
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BetNumlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addGap(66, 66, 66)
                                        .addComponent(ConfrimBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131))))
                            .addGroup(BackG1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addComponent(StartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(MoneyTlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addComponent(StayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RndStartBtn))
                                    .addGroup(BackG1Layout.createSequentialGroup()
                                        .addComponent(HitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RndEndBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(PlusBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MinusBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addComponent(Instlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        BackG1Layout.setVerticalGroup(
            BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackG1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoneyTlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlusBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BetNumlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ConfrimBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinusBetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Warninglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Scr2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DCardTlbl))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PCard1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCard2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCard5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCardTlbl)))
                    .addGroup(BackG1Layout.createSequentialGroup()
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RndStartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(BackG1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RndEndBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(85, 85, 85)
                .addComponent(Instlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackG1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackG1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartBtnActionPerformed
        CardTotal = 2;
  //Literally just for two cards, come back and fix this
  //Note:As i started to run out of time ive stopped trying to work around these long if statements
  //Work on after culmnating is done
       StartBtn.setVisible(false);
       ConfrimBetBtn.setEnabled(true);
       PlusBetBtn.setEnabled(true);
       MinusBetBtn.setEnabled(true);
       money = 1000;
       bet = 100;
       BetNumlbl.setText(String.valueOf(bet));
       MoneyTlbl.setText(String.valueOf("Money: "+money));
       
      
    }//GEN-LAST:event_StartBtnActionPerformed

    private void RndStartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RndStartBtnActionPerformed
         HitBtn.setVisible(true);
         HitBtn.setEnabled(true);
       StayBtn.setVisible(true);
        StayBtn.setEnabled(true);
        RndStartBtn.setVisible(false);
        DealerCard[0] = CardVal();
       if(DealerCard[0]==1){
        DCard1.setText(String.valueOf(CardNames[0]));
        DealerCardTotal = 11;
        AceCheck=true;
    }else if (DealerCard[0]==2){
        DCard1.setText(String.valueOf(CardNames[1]));
        DealerCardTotal = 2;
    }else if(DealerCard[0]==3){
        DCard1.setText(String.valueOf(CardNames[2]));
        DealerCardTotal = 3;
    }else if(DealerCard[0]==4){
        DCard1.setText(String.valueOf(CardNames[3]));
        DealerCardTotal = 4;
    }else if(DealerCard[0]==5){
        DCard1.setText(String.valueOf(CardNames[4]));
        DealerCardTotal = 5;
    }else if(DealerCard[0]==6){
        DCard1.setText(String.valueOf(CardNames[5]));
        DealerCardTotal = 6;
    }else if(DealerCard[0]==7){
        DCard1.setText(String.valueOf(CardNames[6]));
        DealerCardTotal = 7;
    }else if(DealerCard[0]==8){
        DCard1.setText(String.valueOf(CardNames[7]));
        DealerCardTotal = 8;
    }else if(DealerCard[0]==9){
        DCard1.setText(String.valueOf(CardNames[8]));
        DealerCardTotal = 9;
    }else if(DealerCard[0]==10){
        DCard1.setText(String.valueOf(CardNames[9]));
        DealerCardTotal = 10;
    }else if(DealerCard[0]==11){
        DCard1.setText(String.valueOf(CardNames[10]));
        DealerCardTotal = 10;
    }else if(DealerCard[0]==12){
        DCard1.setText(String.valueOf(CardNames[11]));
        DealerCardTotal = 10;
    }else if(DealerCard[0]==13){
        DCard1.setText(String.valueOf(CardNames[12]));
        DealerCardTotal = 10;
    }else {
        System.out.println("How does this even happen");
    }
        PlyrCard[0] = CardVal();
        
    if(PlyrCard[0]==1){
        PCard1.setText(String.valueOf(CardNames[0]));
        PlyrCardTotal = 11;
        AceCheck=true;
    }else if (PlyrCard[0]==2){
        PCard1.setText(String.valueOf(CardNames[1]));
        PlyrCardTotal = 2;
    }else if(PlyrCard[0]==3){
        PCard1.setText(String.valueOf(CardNames[2]));
        PlyrCardTotal = 3;
    }else if(PlyrCard[0]==4){
        PCard1.setText(String.valueOf(CardNames[3]));
        PlyrCardTotal = 4;
    }else if(PlyrCard[0]==5){
        PCard1.setText(String.valueOf(CardNames[4]));
        PlyrCardTotal = 5;
    }else if(PlyrCard[0]==6){
        PCard1.setText(String.valueOf(CardNames[5]));
        PlyrCardTotal = 6;
    }else if(PlyrCard[0]==7){
        PCard1.setText(String.valueOf(CardNames[6]));
        PlyrCardTotal = 7;
    }else if(PlyrCard[0]==8){
        PCard1.setText(String.valueOf(CardNames[7]));
        PlyrCardTotal = 8;
    }else if(PlyrCard[0]==9){
        PCard1.setText(String.valueOf(CardNames[8]));
        PlyrCardTotal = 9;
    }else if(PlyrCard[0]==10){
        PCard1.setText(String.valueOf(CardNames[9]));
        PlyrCardTotal = 10;
    }else if(PlyrCard[0]==11){
        PCard1.setText(String.valueOf(CardNames[10]));
        PlyrCardTotal = 10;
    }else if(PlyrCard[0]==12){
        PCard1.setText(String.valueOf(CardNames[11]));
        PlyrCardTotal = 10;
    }else if(PlyrCard[0]==13){
        PCard1.setText(String.valueOf(CardNames[12]));
        PlyrCardTotal = 10;
    }else {
        System.out.println("How does this even happen");
    }
        
    
    PlyrCard[1] = CardVal();
    if(PlyrCard[1]==1){
        PCard2.setText(String.valueOf(CardNames[0]));
        PlyrCardTotal =PlyrCardTotal + 11;
        AceCheck=true;
    }else if (PlyrCard[1]==2){
        PCard2.setText(String.valueOf(CardNames[1]));
        PlyrCardTotal =PlyrCardTotal + 2;
    }else if(PlyrCard[1]==3){
        PCard2.setText(String.valueOf(CardNames[2]));
        PlyrCardTotal =PlyrCardTotal + 3;
    }else if(PlyrCard[1]==4){
        PCard2.setText(String.valueOf(CardNames[3]));
        PlyrCardTotal =PlyrCardTotal + 4;
    }else if(PlyrCard[1]==5){
        PCard2.setText(String.valueOf(CardNames[4]));
        PlyrCardTotal =PlyrCardTotal + 5;
    }else if(PlyrCard[1]==6){
        PCard2.setText(String.valueOf(CardNames[5]));
        PlyrCardTotal =PlyrCardTotal + 6;
    }else if(PlyrCard[1]==7){
        PCard2.setText(String.valueOf(CardNames[6]));
        PlyrCardTotal =PlyrCardTotal + 7;
    }else if(PlyrCard[1]==8){
        PCard2.setText(String.valueOf(CardNames[7]));
        PlyrCardTotal =PlyrCardTotal + 8;
    }else if(PlyrCard[1]==9){
        PCard2.setText(String.valueOf(CardNames[8]));
        PlyrCardTotal =PlyrCardTotal + 9;
    }else if(PlyrCard[1]==10){
        PCard2.setText(String.valueOf(CardNames[9]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[1]==11){
        PCard2.setText(String.valueOf(CardNames[10]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[1]==12){
        PCard2.setText(String.valueOf(CardNames[11]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[1]==13){
        PCard2.setText(String.valueOf(CardNames[12]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else {
        System.out.println("How does this even happen");
    }
    PCardTlbl.setText(String.valueOf("Player Card Total: "+PlyrCardTotal));
    DCardTlbl.setText(String.valueOf("Dealer Card Total: "+DealerCardTotal));
    if(AceCheck == true&&PlyrCardTotal>21){
        PlyrCardTotal = PlyrCardTotal-10;
        AceCheck = false;
    }
    
    }//GEN-LAST:event_RndStartBtnActionPerformed

    private void HitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitBtnActionPerformed
        CardTotal = CardTotal +1;
        
        if (CardTotal == 5){
            //Just to disallow more than 5 cards 
            HitBtn.setEnabled(false);
            
            PlyrCard[4] = CardVal();
            if(PlyrCard[4]==1){
        PCard5.setText(String.valueOf(CardNames[0]));
        PlyrCardTotal =PlyrCardTotal + 11;
        AceCheck=true;
    }else if (PlyrCard[4]==2){
        PCard5.setText(String.valueOf(CardNames[1]));
        PlyrCardTotal =PlyrCardTotal + 2;
    }else if(PlyrCard[4]==3){
        PCard5.setText(String.valueOf(CardNames[2]));
        PlyrCardTotal =PlyrCardTotal + 3;
    }else if(PlyrCard[4]==4){
        PCard5.setText(String.valueOf(CardNames[3]));
        PlyrCardTotal =PlyrCardTotal + 4;
    }else if(PlyrCard[4]==5){
        PCard5.setText(String.valueOf(CardNames[4]));
        PlyrCardTotal =PlyrCardTotal + 5;
    }else if(PlyrCard[4]==6){
        PCard5.setText(String.valueOf(CardNames[5]));
        PlyrCardTotal =PlyrCardTotal + 6;
    }else if(PlyrCard[4]==7){
        PCard5.setText(String.valueOf(CardNames[6]));
        PlyrCardTotal =PlyrCardTotal + 7;
    }else if(PlyrCard[4]==8){
        PCard5.setText(String.valueOf(CardNames[7]));
        PlyrCardTotal =PlyrCardTotal + 8;
    }else if(PlyrCard[4]==9){
        PCard5.setText(String.valueOf(CardNames[8]));
        PlyrCardTotal =PlyrCardTotal + 9;
    }else if(PlyrCard[4]==10){
        PCard5.setText(String.valueOf(CardNames[9]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[4]==11){
        PCard5.setText(String.valueOf(CardNames[10]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[4]==12){
        PCard5.setText(String.valueOf(CardNames[11]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[4]==13){
        PCard5.setText(String.valueOf(CardNames[12]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else {
        System.out.println("How does this even happen");
    }
        }
    if(AceCheck == true&&PlyrCardTotal>21){
        PlyrCardTotal = PlyrCardTotal-10;
    }
    
        if (CardTotal == 4){
            PlyrCard[3] = CardVal();
            if(PlyrCard[3]==1){
        PCard4.setText(String.valueOf(CardNames[0]));
        PlyrCardTotal =PlyrCardTotal + 11;
        AceCheck=true;
    }else if (PlyrCard[3]==2){
        PCard4.setText(String.valueOf(CardNames[1]));
        PlyrCardTotal =PlyrCardTotal + 2;
    }else if(PlyrCard[3]==3){
        PCard4.setText(String.valueOf(CardNames[2]));
        PlyrCardTotal =PlyrCardTotal + 3;
    }else if(PlyrCard[3]==4){
        PCard4.setText(String.valueOf(CardNames[3]));
        PlyrCardTotal =PlyrCardTotal + 4;
    }else if(PlyrCard[3]==5){
        PCard4.setText(String.valueOf(CardNames[4]));
        PlyrCardTotal =PlyrCardTotal + 5;
    }else if(PlyrCard[3]==6){
        PCard4.setText(String.valueOf(CardNames[5]));
        PlyrCardTotal =PlyrCardTotal + 6;
    }else if(PlyrCard[3]==7){
        PCard4.setText(String.valueOf(CardNames[6]));
        PlyrCardTotal =PlyrCardTotal + 7;
    }else if(PlyrCard[3]==8){
        PCard4.setText(String.valueOf(CardNames[7]));
        PlyrCardTotal =PlyrCardTotal + 8;
    }else if(PlyrCard[3]==9){
        PCard4.setText(String.valueOf(CardNames[8]));
        PlyrCardTotal =PlyrCardTotal + 9;
    }else if(PlyrCard[3]==10){
        PCard4.setText(String.valueOf(CardNames[9]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[3]==11){
        PCard4.setText(String.valueOf(CardNames[10]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[3]==12){
        PCard4.setText(String.valueOf(CardNames[11]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[3]==13){
        PCard4.setText(String.valueOf(CardNames[12]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else {
        System.out.println("How does this even happen");
    }
    
    if(AceCheck == true&&PlyrCardTotal>21){
        PlyrCardTotal = PlyrCardTotal-10;
        AceCheck = false;
    }
    
        }
        if (CardTotal == 3){
            PlyrCard[2] = CardVal();
            if(PlyrCard[2]==1){
        PCard3.setText(String.valueOf(CardNames[0]));
        PlyrCardTotal =PlyrCardTotal + 11;
        AceCheck=true;
    }else if (PlyrCard[2]==2){
        PCard3.setText(String.valueOf(CardNames[1]));
        PlyrCardTotal =PlyrCardTotal + 2;
    }else if(PlyrCard[2]==3){
        PCard3.setText(String.valueOf(CardNames[2]));
        PlyrCardTotal =PlyrCardTotal + 3;
    }else if(PlyrCard[2]==4){
        PCard3.setText(String.valueOf(CardNames[3]));
        PlyrCardTotal =PlyrCardTotal + 4;
    }else if(PlyrCard[2]==5){
        PCard3.setText(String.valueOf(CardNames[4]));
        PlyrCardTotal =PlyrCardTotal + 5;
    }else if(PlyrCard[2]==6){
        PCard3.setText(String.valueOf(CardNames[5]));
        PlyrCardTotal =PlyrCardTotal + 6;
    }else if(PlyrCard[2]==7){
        PCard3.setText(String.valueOf(CardNames[6]));
        PlyrCardTotal =PlyrCardTotal + 7;
    }else if(PlyrCard[2]==8){
        PCard3.setText(String.valueOf(CardNames[7]));
        PlyrCardTotal =PlyrCardTotal + 8;
    }else if(PlyrCard[2]==9){
        PCard3.setText(String.valueOf(CardNames[8]));
        PlyrCardTotal =PlyrCardTotal + 9;
    }else if(PlyrCard[2]==10){
        PCard3.setText(String.valueOf(CardNames[9]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[2]==11){
        PCard3.setText(String.valueOf(CardNames[10]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[2]==12){
        PCard3.setText(String.valueOf(CardNames[11]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else if(PlyrCard[2]==13){
        PCard3.setText(String.valueOf(CardNames[12]));
        PlyrCardTotal =PlyrCardTotal + 10;
    }else {
        System.out.println("How does this even happen");
    }
    
    if(AceCheck == true&&PlyrCardTotal>21){
        PlyrCardTotal = PlyrCardTotal-10;
        AceCheck = false;
    }
    
        }
        if (PlyrCardTotal>21&&AceCheck==false){
         Win=false;
         Tie=false;
        // Instlbl.setText("Looks like the dealer wins");
         StayBtn.setEnabled(false);
         RndEndBtn.setVisible(true);
         RndEndBtn.setEnabled(true);
         HitBtn.setEnabled(false);
        }
        
        PCardTlbl.setText(String.valueOf("Player Card Total: "+PlyrCardTotal));
        DCardTlbl.setText(String.valueOf("Dealer Card Total: "+DealerCardTotal));
    }//GEN-LAST:event_HitBtnActionPerformed

    private void ConfrimBetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfrimBetBtnActionPerformed
       PlyrCardTotal=0;
       CardTotal=2;
       Instlbl.setText(" ");
       Warninglbl.setText(" ");
        if(money<=1){
             RndStartBtn.setVisible(false);
       ConfrimBetBtn.setEnabled(false);
       PlusBetBtn.setEnabled(false);
       MinusBetBtn.setEnabled(false);
       RndEndBtn.setVisible(false);
       HitBtn.setEnabled(false);
       StayBtn.setEnabled(false);
         }
        money = money-bet;
       PlusBetBtn.setEnabled(false);
       MinusBetBtn.setEnabled(false);
      ConfrimBetBtn.setEnabled(false);
       RndStartBtn.setVisible(true);
       RndEndBtn.setEnabled(false);
       MoneyTlbl.setText(String.valueOf("Money: "+money));
    }//GEN-LAST:event_ConfrimBetBtnActionPerformed

    private void PlusBetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlusBetBtnActionPerformed
        bet = bet +100;
        if (bet>money){
            Warninglbl.setText("Whoah there you don't have that money on you yet!");
            bet = money;
        }
        BetNumlbl.setText(String.valueOf(bet));
    }//GEN-LAST:event_PlusBetBtnActionPerformed

    private void MinusBetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusBetBtnActionPerformed
        bet = bet -100;
        if (bet<=0){
            Warninglbl.setText("Whoah there you need to bet 100$ at least!");
            bet = 100;
        }
        BetNumlbl.setText(String.valueOf(bet));
    }//GEN-LAST:event_MinusBetBtnActionPerformed

    private void StayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StayBtnActionPerformed
        RndEndBtn.setVisible(true);
        RndEndBtn.setEnabled(true);
        HitBtn.setEnabled(false);
        StayBtn.setEnabled(false);
//         DCard1.setText(" ");
//         DCard2.setText(" ");
//         DCard3.setText(" ");
//         DCard4.setText(" ");
//         DCard5.setText(" ");
         
        
       //Again very long and tedious solution but it works
       //The if statments get a bit messier here but its to deal with every possible case there is
       //Extremely stupid solution but works
       DealerCard[1] = CardVal();
       if(DealerCard[1]==1){
        DCard2.setText(String.valueOf(CardNames[0]));
        DealerCardTotal =DealerCardTotal+ 11;
        AceCheck=true;
    }else if (DealerCard[1]==2){
        DCard2.setText(String.valueOf(CardNames[1]));
        DealerCardTotal = DealerCardTotal+2;
    }else if(DealerCard[1]==3){
        DCard2.setText(String.valueOf(CardNames[2]));
        DealerCardTotal = DealerCardTotal+3;
    }else if(DealerCard[1]==4){
        DCard2.setText(String.valueOf(CardNames[3]));
        DealerCardTotal = DealerCardTotal+4;
    }else if(DealerCard[1]==5){
        DCard2.setText(String.valueOf(CardNames[4]));
        DealerCardTotal = DealerCardTotal+5;
    }else if(DealerCard[1]==6){
        DCard2.setText(String.valueOf(CardNames[5]));
        DealerCardTotal = DealerCardTotal+6;
    }else if(DealerCard[1]==7){
        DCard2.setText(String.valueOf(CardNames[6]));
        DealerCardTotal =DealerCardTotal+ 7;
    }else if(DealerCard[1]==8){
        DCard2.setText(String.valueOf(CardNames[7]));
        DealerCardTotal =DealerCardTotal+ 8;
    }else if(DealerCard[1]==9){
        DCard2.setText(String.valueOf(CardNames[8]));
        DealerCardTotal =DealerCardTotal+ 9;
    }else if(DealerCard[1]==10){
        DCard2.setText(String.valueOf(CardNames[9]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[1]==11){
        DCard2.setText(String.valueOf(CardNames[10]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[1]==12){
        DCard2.setText(String.valueOf(CardNames[11]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[1]==13){
        DCard2.setText(String.valueOf(CardNames[12]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else {
        System.out.println("How does this even happen");
    }
       if(AceCheck == true&&DealerCardTotal>21){
        DealerCardTotal = DealerCardTotal-10;
        AceCheck = false;
    }
       if(DealerCardTotal<17){
           DealerCard[2] = CardVal();
       if(DealerCard[2]==1){
        DCard3.setText(String.valueOf(CardNames[0]));
        DealerCardTotal =DealerCardTotal+ 11;
        AceCheck=true;
    }else if (DealerCard[2]==2){
        DCard3.setText(String.valueOf(CardNames[1]));
        DealerCardTotal = DealerCardTotal+2;
    }else if(DealerCard[2]==3){
        DCard3.setText(String.valueOf(CardNames[2]));
        DealerCardTotal = DealerCardTotal+3;
    }else if(DealerCard[2]==4){
        DCard3.setText(String.valueOf(CardNames[3]));
        DealerCardTotal = DealerCardTotal+4;
    }else if(DealerCard[2]==5){
        DCard3.setText(String.valueOf(CardNames[4]));
        DealerCardTotal = DealerCardTotal+5;
    }else if(DealerCard[2]==6){
        DCard3.setText(String.valueOf(CardNames[5]));
        DealerCardTotal = DealerCardTotal+6;
    }else if(DealerCard[2]==7){
        DCard3.setText(String.valueOf(CardNames[6]));
        DealerCardTotal =DealerCardTotal+ 7;
    }else if(DealerCard[2]==8){
        DCard3.setText(String.valueOf(CardNames[7]));
        DealerCardTotal =DealerCardTotal+ 8;
    }else if(DealerCard[2]==9){
        DCard3.setText(String.valueOf(CardNames[8]));
        DealerCardTotal =DealerCardTotal+ 9;
    }else if(DealerCard[2]==10){
        DCard3.setText(String.valueOf(CardNames[9]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[2]==11){
        DCard3.setText(String.valueOf(CardNames[10]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[2]==12){
        DCard3.setText(String.valueOf(CardNames[11]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[2]==13){
        DCard3.setText(String.valueOf(CardNames[12]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else {
        System.out.println("How does this even happen");
        //It happened.
    }
       if(AceCheck == true&&DealerCardTotal>21){
        DealerCardTotal = DealerCardTotal-10;
        AceCheck = false;
    }
       if(DealerCardTotal<17){
           DealerCard[3] = CardVal();
       if(DealerCard[3]==1){
        DCard4.setText(String.valueOf(CardNames[0]));
        DealerCardTotal =DealerCardTotal+ 11;
        AceCheck=true;
    }else if (DealerCard[3]==2){
        DCard4.setText(String.valueOf(CardNames[1]));
        DealerCardTotal = DealerCardTotal+2;
    }else if(DealerCard[3]==3){
        DCard4.setText(String.valueOf(CardNames[2]));
        DealerCardTotal = DealerCardTotal+3;
    }else if(DealerCard[3]==4){
        DCard4.setText(String.valueOf(CardNames[3]));
        DealerCardTotal = DealerCardTotal+4;
    }else if(DealerCard[3]==5){
        DCard4.setText(String.valueOf(CardNames[4]));
        DealerCardTotal = DealerCardTotal+5;
    }else if(DealerCard[3]==6){
        DCard4.setText(String.valueOf(CardNames[5]));
        DealerCardTotal = DealerCardTotal+6;
    }else if(DealerCard[3]==7){
        DCard4.setText(String.valueOf(CardNames[6]));
        DealerCardTotal =DealerCardTotal+ 7;
    }else if(DealerCard[3]==8){
        DCard4.setText(String.valueOf(CardNames[7]));
        DealerCardTotal =DealerCardTotal+ 8;
    }else if(DealerCard[3]==9){
        DCard4.setText(String.valueOf(CardNames[8]));
        DealerCardTotal =DealerCardTotal+ 9;
    }else if(DealerCard[3]==10){
        DCard4.setText(String.valueOf(CardNames[9]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[3]==11){
        DCard4.setText(String.valueOf(CardNames[10]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[3]==12){
        DCard4.setText(String.valueOf(CardNames[11]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[3]==13){
        DCard4.setText(String.valueOf(CardNames[12]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else {
        System.out.println("How does this even happen");
    }
       if(AceCheck == true&&DealerCardTotal>21){
        DealerCardTotal = DealerCardTotal-10;
        AceCheck = false;
    }
       if(DealerCardTotal<17){
           DealerCard[4] = CardVal();
       if(DealerCard[4]==1){
        DCard5.setText(String.valueOf(CardNames[0]));
        DealerCardTotal =DealerCardTotal+ 11;
        AceCheck=true;
    }else if (DealerCard[4]==2){
        DCard5.setText(String.valueOf(CardNames[1]));
        DealerCardTotal = DealerCardTotal+2;
    }else if(DealerCard[4]==3){
        DCard5.setText(String.valueOf(CardNames[2]));
        DealerCardTotal = DealerCardTotal+3;
    }else if(DealerCard[4]==4){
        DCard5.setText(String.valueOf(CardNames[3]));
        DealerCardTotal = DealerCardTotal+4;
    }else if(DealerCard[4]==5){
        DCard5.setText(String.valueOf(CardNames[4]));
        DealerCardTotal = DealerCardTotal+5;
    }else if(DealerCard[4]==6){
        DCard5.setText(String.valueOf(CardNames[5]));
        DealerCardTotal = DealerCardTotal+6;
    }else if(DealerCard[4]==7){
        DCard5.setText(String.valueOf(CardNames[6]));
        DealerCardTotal =DealerCardTotal+ 7;
    }else if(DealerCard[4]==8){
        DCard5.setText(String.valueOf(CardNames[7]));
        DealerCardTotal =DealerCardTotal+ 8;
    }else if(DealerCard[4]==9){
        DCard5.setText(String.valueOf(CardNames[8]));
        DealerCardTotal =DealerCardTotal+ 9;
    }else if(DealerCard[4]==10){
        DCard5.setText(String.valueOf(CardNames[9]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[4]==11){
        DCard5.setText(String.valueOf(CardNames[10]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[4]==12){
        DCard5.setText(String.valueOf(CardNames[11]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else if(DealerCard[4]==13){
        DCard5.setText(String.valueOf(CardNames[12]));
        DealerCardTotal =DealerCardTotal+ 10;
    }else {
        System.out.println("How does this even happen");
    }
       if(AceCheck == true&&DealerCardTotal>21){
        DealerCardTotal = DealerCardTotal-10;
        AceCheck = false;
    }
       
       }
       
       }
       
       
       
       }
       //win loss tie scenarios aren't very linear and it's 3am come back later if it's wrong
       if(DealerCardTotal>21&&AceCheck==false){
           //System.out.println("bad");
           Win=true;
           
       }
       if(PlyrCardTotal>DealerCardTotal&&PlyrCardTotal<21){
            Win=true;
           // Instlbl.setText("Looks like you win");
       }
       if(PlyrCardTotal ==DealerCardTotal){
           
           Tie=true;
          // Instlbl.setText("Looks like a tie");
       }
        DCardTlbl.setText(String.valueOf("Dealer Card Total: "+DealerCardTotal));
    }//GEN-LAST:event_StayBtnActionPerformed

    private void RndEndBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RndEndBtnActionPerformed
         DCard3.setText("-----");
         DCard4.setText("-----");
         DCard2.setText("-----");
         DCard5.setText("-----");
         DCard1.setText("-----");
         PCard3.setText("-----");
         PCard4.setText("-----");
         PCard2.setText("-----");
         PCard5.setText("-----");
         PCard1.setText("-----");
         if(Win==true){
             Instlbl.setText("Looks like you won!");
             money=money+(bet*2);
             Win=false;
             //Could have moved code outside if statment to save three iterations of the same line
             MoneyTlbl.setText(String.valueOf(money));
         }else{
             MoneyTlbl.setText(String.valueOf(money));
             Win=false;
             Instlbl.setText("Looks like you lost :( ");
         }
         if(Tie==true){
             Instlbl.setText("Looks we tied");
             money = money+bet;
             Tie=false;
             MoneyTlbl.setText(String.valueOf("Money: "+money));
         }
         
         PlusBetBtn.setEnabled(true);
       MinusBetBtn.setEnabled(true);
      ConfrimBetBtn.setEnabled(true);
      RndEndBtn.setVisible(false);
       RndEndBtn.setEnabled(false);
       if(bet>money){
           BetNumlbl.setText(String.valueOf(money));
       }
       if(money<=1){
       StartBtn.setVisible(true);
       RndStartBtn.setVisible(false);
       ConfrimBetBtn.setEnabled(false);
       PlusBetBtn.setEnabled(false);
       MinusBetBtn.setEnabled(false);
       RndEndBtn.setVisible(false);
       HitBtn.setEnabled(false);
       StayBtn.setEnabled(false);
       Instlbl.setText("Looks like you're broke, click start game to resart with 1000$");
         }
       DCardTlbl.setText(String.valueOf("Dealer Card Total: "));
       PCardTlbl.setText(String.valueOf("Player Card Total: "));
    }//GEN-LAST:event_RndEndBtnActionPerformed

    private void Scr2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Scr2BtnActionPerformed
        new RulesPage().setVisible(true);
         
        
       
    }//GEN-LAST:event_Scr2BtnActionPerformed
 public static int CardVal(){
     Random rand = new Random(); 
      int RandomCard = rand.nextInt(13)+1; 
      
    return RandomCard;
    
     
 }


         public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackjackGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackG1;
    private javax.swing.JLabel BetNumlbl;
    private javax.swing.JButton ConfrimBetBtn;
    private javax.swing.JLabel DCard1;
    private javax.swing.JLabel DCard2;
    private javax.swing.JLabel DCard3;
    private javax.swing.JLabel DCard4;
    private javax.swing.JLabel DCard5;
    private javax.swing.JLabel DCardTlbl;
    private javax.swing.JButton HitBtn;
    private javax.swing.JLabel Instlbl;
    private javax.swing.JButton MinusBetBtn;
    private javax.swing.JLabel MoneyTlbl;
    private javax.swing.JLabel PCard1;
    private javax.swing.JLabel PCard2;
    private javax.swing.JLabel PCard3;
    private javax.swing.JLabel PCard4;
    private javax.swing.JLabel PCard5;
    private javax.swing.JLabel PCardTlbl;
    private javax.swing.JButton PlusBetBtn;
    private javax.swing.JButton RndEndBtn;
    private javax.swing.JButton RndStartBtn;
    private javax.swing.JButton Scr2Btn;
    private javax.swing.JButton StartBtn;
    private javax.swing.JButton StayBtn;
    private javax.swing.JLabel Warninglbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
//This is for unused code
//Code that could have worked with different implementation but didn't
//Come back to use for maybe an easier solution to problems in the future
/*
public enum RNGChoice{
      Ace,
      Two,
      Three,
      Four,
      Five,
      Six,
      Seven,
      Eight,
      Nine,
      Ten,
      Jack,
      Queen,
      King;}
private RNGChoice getRandomPlr(){
    RNGChoice RNG= RNGChoice.values()[Math.round((int)(Math.random()*7))];
   return RNG;
}
--------------------------------------------------------------------------

//Inserted in a button-----------
System.out.println(PlyrCard[0]);
        System.out.println(PlyrCard[1]);
        
        int CardVal = (int) (Math.random() * 13);
        System.out.println(getName(CardVal));
//-------------------------------
public static String getName(int CardVal){ 

    String[] CardNames = new String[13];

        CardNames[0] = "Ace";
        CardNames[1] = "Two";
        CardNames[2] = "Three";
        CardNames[3] = "Four";
        CardNames[4] = "Five";
        CardNames[5] = "Six";
       CardNames[6] = "Seven";
        CardNames[7] = "Eight";
        CardNames[8] = "Nine";
        CardNames[9] = "Ten";
        CardNames[10] = "Jack";
        CardNames[11] = "Queen";
        CardNames[12] = "King";
        
        
        
        
    return CardNames[CardVal];
}



------------------------------------------------------
//This was a part of the idea to show the lifetime stats of winnings in the game but had to be cut because of time constraints due to other projects
File dataFile = new File("Bet.dat");
        FileWriter out;
        BufferedWriter writeFile;
        FileReader in;
	BufferedReader readFile;
        //Readers a writers for below
       // int i = 0;
        double LastEntry = Double.parseDouble(BetNumlbl.getText());
        double Tbet = 0;
        //Values for more info/minor fix below
        try {
                out = new FileWriter(dataFile,true);
                writeFile = new BufferedWriter(out);
                in = new FileReader(dataFile);
		readFile = new BufferedReader(in);
                Scanner scanner = new Scanner(new File("Bet.dat"));
                      // BetNumlbl.setText("");
                       //writeFile.newLine();
                       writeFile.write(String.valueOf(LastEntry));
                        writeFile.newLine();
               while(scanner.hasNextDouble()){
                    double bet = scanner.nextDouble();
                    System.out.println(bet);
                    Tbet = Tbet +bet;
                   // i++;
                    
               }
               System.out.println(LastEntry);
               Tbet = Tbet+LastEntry;
              // System.out.println(TInc);
               
        writeFile.close();
        out.close();
        readFile.close();
        in.close();
        
        System.out.println("Data written to file.");
     
                        
    		
    } catch (IOException e) {
    System.out.println("Problem writing to file.");
    System.err.println("IOException: " + e.getMessage());
    }
       BetNumlbl.setText(String.valueOf(Tbet));
*/